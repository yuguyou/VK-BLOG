** 生命周期
*** getDefaultProps
    - 作用于组件类，只调用一次，返回对象用于设置默认的props
*** constructor(props, context):
    - 构造函数，在创建组件的时候调用一次。
*** componentWillMount():
    - 允许更新props或state，不会触发重新渲染。
    - 在组件挂载之前调用一次。
*** componentDidMount():
    - 允许更新props或state, 触发重新渲染。
    - 在组件挂载之后调用一次。这个时候，子主键也都挂载好了，可以在这里使用refs。
*** componentWillReceiveProps(nextProps):
    - 允许更新props或state，不会触发重新渲染。
    - props是父组件传递给子组件
    - 只有在一些组件的props可能被更新的时候才会调用。调用this.setState通常不会触发componentWillReceiveProps。
*** shouldComponentUpdate(nextProps, nextState)：
    - 组件挂载之后，每次调用setState后都会调用shouldComponentUpdate判断是否需要重新渲染组件。默认返回true，需要重新render。
*** componentWillUpdate(nextProps, nextState):
    - 不允许更新props或state
    - shouldComponentUpdate返回true或者调用forceUpdate之后，componentWillUpdate会被调用。
    - 初始渲染不会调用此方法
*** componentDidUpdate():
    - 存在期render结束之后都是调用componentDidUpdate
*** render():
    - 必选的方法，创建虚拟DOM，该方法具有特殊的规则：
    - 只能通过this.props和this.state访问数据
    - 可以返回null、false或任何React组件
    - 只能出现一个顶级组件（不能返回数组）
    - 不能改变组件的状态
    - 不能修改DOM的输出
*** componentWillUnmount():
    - 组件被移除之前被调用，可以用于做一些清理工作，在componentDidMount方法中添加的所有任务都需要在该方法中撤销，比如创建的定时器或添加的事件监听器。
