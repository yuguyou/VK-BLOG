* ES6基础语法 
** let \ const
   - 只在声明所在的块级作用域内有效
   - 不存在变量提升, 声明的变量一定要在声明后使用，否则报错
*** let
    - 不允许在相同作用域内，重复声明同一个变量
*** const
    - 声明一个只读的常量。一旦声明，常量的值就不能改变。
*** 顶层对象的属性
    - 顶层对象，在浏览器环境指的是window对象，在Node指的是global对象
    - var命令和function命令声明的全局变量，依旧是顶层对象的属性
** 变量的解构赋值
   - let [a, b, c] = [1, 2, 3];
   - 默认值
     - let [x = 1] = [undefined];
   - 对象的解构赋值
     - let { foo: baz } = { foo: 'aaa', bar: 'bbb' };
   - 字符串的解构赋值
     - const [a, b, c, d, e] = 'hello';
     - let {length : len} = 'hello'; len -> 5
   - 数值和布尔值的解构赋值
     - 解构赋值时，如果等号右边是数值和布尔值，则会先转为对象。
     - let {toString: s} = 123; s === Number.prototype.toString -> true
   - 函数参数的解构赋值
     - [ [1, 2]], [ 3, 4 ]].map(([a, b]) => a + b);
** 字符串扩展
   - 字符串的遍历器接口
     - for (let codePoint of 'foo')
   - includes()：返回布尔值，表示是否找到了参数字符串。
   - startsWith()：返回布尔值，表示参数字符串是否在源字符串的头部。
   - endsWith()：返回布尔值，表示参数字符串是否在源字符串的尾部。
   - padStart()用于头部补全，padEnd()用于尾部补全
     - padStart()用于头部补全，padEnd()用于尾部补全
   - 模板字符串
     - 使用反引号（`）标识
     - 使用反斜杠转义
     - 使用${}嵌入变量
     - 标签模板
